name: Build/test on Linux
# This workflow is triggered on pushes to the repository.
on: [push, pull_request]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                py: [
                    '2.7',
                    '3.5',
                    '3.6',
                    '3.7',
                    '3.8',
                    'pypy2',
                    'pypy3'
                ]
        name: "Python: ${{ matrix.py }}"
        steps:
            - uses: actions/checkout@master
            - name: Setup python
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.py }}
                  architecture: x64
            - run: pip install tox
            - name: Running tox
              run: tox -e py
    coverage:
        runs-on: ubuntu-latest
        name: Validate coverage for Python 2/3
        steps:
            - uses: actions/checkout@master
            - name: Setup python
              uses: actions/setup-python@v1
              with:
                  python-version: 2.7
                  architecture: x64
            - name: Setup python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.8
                  architecture: x64
            - run: pip install tox
            - run: tox -e py38,py27,coverage
    docs:
        runs-on: ubuntu-latest
        name: Build the documentation
        steps:
            - uses: actions/checkout@master
            - name: Setup python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.8
                  architecture: x64
            - run: pip install tox
            - run: tox -e docs
    lint:
        runs-on: ubuntu-latest
        name: Lint the package
        steps:
            - uses: actions/checkout@master
            - name: Setup python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.8
                  architecture: x64
            - run: pip install tox
            - run: tox -e lint
